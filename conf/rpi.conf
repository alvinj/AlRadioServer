# This is the main configuration file for the application.
# ~~~~~

vlc_host=localhost
vlc_port=5150

radio_server_host=localhost
radio_server_port=5151

# alsa script to set the volume
volume_command=/var/www/radio/scripts/vol

# where the stream recordings are kept
recordings_dir=/var/www/radio/data/recordings

plsFileLocation=/var/tmp/PlsFiles

streams = [
    { "streamname": "104.3",          "filename": "104_3.pls" },
    { "streamname": "ESPN-1400",      "filename": "espn-1400.pls" },
    { "streamname": "ESPN-WFBX",      "filename": "espn-wfbx.pls" },
    { "streamname": "WBBM",           "filename": "wbbm-am.pls" },
    { "streamname": "WGN",            "filename": "wgn.pls" },
    { "streamname": "WHAS",           "filename": "whas-am.m3u" },
    { "streamname": "KTNA-Talkeetna", "filename": "ktna-talkeetna.pls" },
]

stations = [
    { "number": 88.5,  "description": "public radio" },
    { "number": 90.1,  "description": "public radio" },
    { "number": 95.7,  "description": "top 40" },
    { "number": 99.5,  "description": "classic rock" },
    { "number": 101.1, "description": "ac" },
    { "number": 102.3, "description": "espn" },
    { "number": 104.3, "description": "sports" },
    { "number": 105.9, "description": "hot ac" },
    { "number": 106.7, "description": "rock" }
]


# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="y4@AbLDxp[LME<rB1o>`Tug5e[/UJotOlBMAcnDvfLj8?Lfy^toSs9=>eMSk^I3c"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

